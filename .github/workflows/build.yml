name: CI
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        arc: [x64]
        framework: ['angular', 'react', 'vue']
        include:
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: ia32

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: "~/.pnpm-store"
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: corepack enable
      - run: corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: |
          npm set arch=${{ matrix.arch }} && cd rdc-client-${{ matrix.framework }} && pnpm update-electron && pnpm install

      - name: Install the Apple certificate
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Build artifacts
        env:
          BUILD_NUMBER: ${{ github.run_number	 }}
          ELECTRON_VERSION: ${{ matrix.electron }}
        run: |
          cd rdc-client-${{ matrix.framework }} && pnpm build -- --${{ matrix.arch }}

      - name: Clean up keychain
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rdc-client-${{ matrix.framework }}/dist/*.dmg
            rdc-client-${{ matrix.framework }}/dist/*.exe
